******************************
* Bonita Studio Build README *
******************************
*
* Table of contents
* 1. Usage
* 2. Development and customization
*
******************************



****************************
* 1. Usage

Once you get this folder, you can build the studio from latest sources simply by typing
> ant -lib antDeps
      -DantExecutable=/path/to/your/ant/executable
      -DbuildDirectory=/path/where/the/build/takes/place
      -Declipse.base.platform=/location/of/the/eclipse/base/to/use
      -Dmaven.repo=/path/to/a/maven/repo/containing/bonita/artifacts
		-Dengine.version=5.5-SNAPSHOT
		-Dweb.version=5.5-SNAPSHOT
		-Dsimulation.version=5.5-SNAPSHOT
		-Dconnectors.version=5.5-SNAPSHOT
		-Dartifact.version=5.5   (artifact.version replaces all *.version if they are not explicitly set)
      (-Dbos.version=a_version_of_bonita)
      (-DisBranch=true)

It requires
* Subversion >=1.5 to be installed and available in path

"antExecutable" property can be set to "ant" under Linux, and to the full path to ant under Windows
"bos.version" is a version of Bonita, such as "5.0.M1". If none is specified a dateTime will be used.


***********************************
* 2. Development and customization

- This build wraps an Eclipse PDE build, and then merges all platform-specific distributions into
a single distribution
- The merge of distribution also requires to merge all config.ini contents, mostly because of the
osgi.bundles property which must contain all bundles for all platforms. A custom ant task is used
to do so.
- The build also generates automatically all EMF/GMF project from the models. These steps are executed
in customTargets: postFetch task
- Since Bonita plugins version naming cannot be applied as a qualifier for plugins, the qualifier
is the value of the version where dots are replace by underscrors. When no version is specified
in bos.version property, a date time is used.

