<project name="BOS-dmg" default="generate.dmg">

	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	
	<property file="build.properties" />
	<property name="jobName" value="All-in-one"/>
	<property name="baseURL" value="http://192.168.1.217:8080/jenkins/job/${jobName}/lastSuccessfulBuild"/>
	
	
	<property name="background.name" value=".backimage" />
	<property name="volumicon.name" value="VolumeIcon.icns" />
	<property name="hdiutil" value="/usr/bin/hdiutil" />
  <property name="unzip" value="/usr/bin/unzip" />

	<property name="mountdir" value="/tmp" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="dmg.dir" value="${mountdir}/${dmg.name}" />

	<target name="generate.dmg">
		
		<antcall target="clean" />
		<delete file="${dmg.name}.dmg" quiet="yes" failonerror="false" />
		
		<get dest="all-in-one.html" src="${baseURL}"/>
		<loadfile property="contents" srcfile="all-in-one.html"/>
		<propertyregex
			input="${contents}"
			property="fileLocation"
			regexp='artifact/all-in-one/([^"]*)-setup.app.zip'
			select="\0"/>
		<echo>fileLocation= ${fileLocation}</echo>
		<delete file="all-in-one.html"/>
		<get dest="BOS-setup.app.zip" src="${baseURL}/${fileLocation}"/>

		<!-- Create source folder -->
		<exec executable="${unzip}" os="Mac OS X" failonerror="true">
			<arg value="BOS-setup.app.zip" />
			<arg value="-d" />
			<arg value="${src.dir}" />
		</exec>
		<delete dir="${src.dir}/__MACOSX" failonerror="false"/>

		<!-- Create a temporary Disk Image -->
		<exec executable="${hdiutil}" os="Mac OS X" failonerror="true">
			<arg value="create" />
			<arg value="-srcfolder" />
			<arg value="${src.dir}" />
			<arg value="-volname" />
			<arg value="${dmg.name}" />
			<arg value="-ov" />
			<arg value="${dmg.name}-tmp.dmg" />
			<arg value="-format" />
			<arg value="UDRW" />
		</exec>

		<!-- Attach the temporary image -->
		<exec executable="${hdiutil}" os="Mac OS X" failonerror="true">
			<arg value="attach" />
			<arg value="${dmg.name}-tmp.dmg" />
			<arg value="-mountroot" />
			<arg value="${mountdir}/" />
		</exec>

		<!-- Copy the background, the volume icon and DS_Store files -->
		<copy file="${background.name}" tofile="${dmg.dir}/${background.name}" overwrite="true" />
		<copy file="${volumicon.name}" tofile="${dmg.dir}/.VolumeIcon.icns" overwrite="true" />
		<!--<copy file="DS_Store" tofile="${dmg.dir}/.DS_Store" overwrite="true" />-->


		<!-- Indicate that we want a custom icon -->
		<exec executable="/Developer/Tools/SetFile" os="Mac OS X">
			<arg value="-a" />
			<arg value="C" />
			<arg value="${dmg.dir}" />
		</exec>

		<!-- Add a symbolic link to the Applications directory -->
		<!--<symlink link="${dmg.dir}" resource="/Applications" />-->

		<!-- Detach the temporary image -->
		<exec executable="${hdiutil}" os="Mac OS X" failonerror="true">
			<arg value="detach" />
			<arg value="${dmg.dir}" />
		</exec>

		<!-- Compress it to a new image -->
		<exec executable="${hdiutil}" os="Mac OS X" failonerror="true">
			<arg value="convert" />
			<arg value="${dmg.name}-tmp.dmg" />
			<arg value="-format" />
			<arg value="UDZO" />
			<arg value="-o" />
			<arg value="${dmg.name}.dmg" />
		</exec>

		<!-- Delete the temporary image -->
		<antcall target="clean" />

	</target>

	<target name="clean">
		<delete file="${dmg.name}-tmp.dmg" quiet="yes" failonerror="false" />
		<delete dir="${src.dir}/__MACOSX"/>
		
		<path id="app.path">
		  <dirset dir="${src.dir}">
		   	<include name="*.app"/>
		  </dirset>
		</path>
		
		<property name="app.dir" refid="app.path"/>
		<echo message=" dir=${app.dir}"/>
		<condition property="app.dir.ok" value="${app.dir}" else="unexistingDir">
			<not>
				<equals arg1="${app.dir}" arg2=""/>
			</not>
		</condition>
		<echo message="app.dir.ok=${app.dir.ok}"/>
		<delete dir="${app.dir.ok}" failonerror="false"/>

	</target>
</project>
